<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */








/**
 * Enter description here...
 *
 */
function delete_subGroupFromUser($groupid){
	global $db;
	
	/* --- User löschen --------------------------------------------- */
	$sqlquery = "SELECT USER_ID,SUB_GROUP FROM LMB_USERDB";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)){
	
		$newsgl = array();
		$update = 0;
		$userid = lmbdb_result($rs, "USER_ID");
		$subgroup = lmbdb_result($rs, "SUB_GROUP");

		if($subgroup){
			$subglist = explode(";",$subgroup);
			foreach ($subglist as $key => $value){
				if($value != $groupid){
					$newsgl[] = $value;
				}else{
					$update = 1;
				}
			}
			
			if($update){
				$newsgl = implode(";",$newsgl);
				$sqlquery1 = "UPDATE LMB_USERDB SET SUB_GROUP = '$newsgl' WHERE USER_ID = $userid";
				$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
			}
		}
	}

}



/* --- Gruppe löschen ---------------------------- */
function delete_group($ID){
	global $db;
	global $umgvar;
	global $lang;

	if($ID){
	    $sqlquery = "SELECT NAME FROM LMB_GROUPS WHERE GROUP_ID = $ID";
	    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		$group_name = lmbdb_result($rs, "NAME");

        /* --- User löschen --------------------------------------------- */
        $sqlquery = "SELECT USER_ID FROM LMB_USERDB WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        while(lmbdb_fetch_row($rs)){
        	delete_user(lmbdb_result($rs, "USER_ID"));
        }


        lmb_StartTransaction();

        $sqlquery = "DELETE FROM LMB_RULES_FIELDS WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LMB_RULES_TABLES WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LDMS_RULES WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LMB_RULES_REPFORM WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LMB_RULES_ACTION WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LMB_GTAB_GROUPDAT WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LMB_SESSION WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LMB_GROUPS WHERE GROUP_ID = $ID";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        $sqlquery = "DELETE FROM LMB_REMINDER WHERE ID IN (SELECT DISTINCT LMB_REMINDER.ID FROM LMB_REMINDER,LMB_REMINDER_GROUP WHERE LMB_REMINDER.ID = LMB_REMINDER_GROUP.REMINDER_ID AND LMB_REMINDER_GROUP.GROUP_ID = $ID)";
        $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
        if(!$rs) {$commit = 1;}
        
        if(!$commit){
        	delete_subGroupFromUser($ID);
        }

        /* --- Transaktion ENDE -------------------------------------- */
        if($commit){
        	lmb_EndTransaction(0);
        	return false;
        } else {
        	echo "<SCRIPT LANGUAGE=\"JavaScript\">alert('".$group_name." ".$lang[1513]."');</SCRIPT>";
        	lmb_EndTransaction(1);
        	return true;
        }

	}
}


/* --- Gruppe und Untergruppen löschen ---------------------------- */
function delete_group_list($ID){
	global $db;
	static $noError;
	$noError = true;

	if($ID){
		$sqlquery = "SELECT GROUP_ID FROM LMB_GROUPS WHERE LEVEL = $ID";
	    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	    if(!$rs) {$commit = 1;}
	    while(lmbdb_fetch_row($rs)) {
	    	if($noError)
				if(delete_group_list(lmbdb_result($rs, "GROUP_ID"))){
					$noError = false;
					return $noError;
				}
		}
	}

	if(!delete_group($ID)){$commit = 1;}
	if($commit){return false;}

	return true;
}




# Dateirechte von Obergruppe übernehmen
function updateParentFilesettings($ID,$group_level){
	global $db;
	
	if(!$group_level){return false;}

	/* --- Dateirechte ------------------------ */
	$sqlquery = "DELETE FROM LDMS_RULES WHERE GROUP_ID = $ID";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);

	$sqlquery = "SELECT * FROM LDMS_RULES WHERE GROUP_ID = $group_level ORDER BY ID";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	while(lmbdb_fetch_row($rs)) {
		/* --- Next ID ---------------------------------------- */
		$NEXTID1 = next_db_id("LDMS_RULES");

        $sqlquery1 = "INSERT INTO LDMS_RULES (
        ID,
        ERSTDATUM,
        GROUP_ID,
        FILE_ID,
        FILE_TYP,
        LMVIEW,
        LMADD,
        DEL,
        ADDF,
        EDIT,
        LMLOCK
        ) VALUES (
        ".$NEXTID1.",
        ".LMB_DBDEF_TIMESTAMP.",
        ".$ID.",
        ".parse_db_int(lmbdb_result($rs, "FILE_ID"),16).",
        ".parse_db_int(lmbdb_result($rs, "FILE_TYP"),5).",
        ".parse_db_bool(lmbdb_result($rs, "LMVIEW")).",
        ".parse_db_bool(lmbdb_result($rs, "LMADD")).",
        ".parse_db_bool(lmbdb_result($rs, "DEL")).",
        ".parse_db_bool(lmbdb_result($rs, "ADDF")).",
        ".parse_db_bool(lmbdb_result($rs, "EDIT")).",
        ".parse_db_bool(lmbdb_result($rs, "LMLOCK"))."
        )";

		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;}
	}

	if($commit){return false;}else{return true;}
}



# --- Menürechte von Obergruppe übernehmen ------------------------
function updateParentMenusettings($ID,$group_level){
	global $db;
	
	if(!$group_level){return false;}

	$sqlquery = "DELETE FROM LMB_RULES_ACTION WHERE GROUP_ID = $ID";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);

    $sqlquery = "SELECT * FROM LMB_RULES_ACTION WHERE GROUP_ID = $group_level ORDER BY ID";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(!$rs) {$commit = 1;}
    while(lmbdb_fetch_row($rs)) {
        /* --- Next ID ---------------------------------------- */
        $NEXTID1 = next_db_id("LMB_RULES_ACTION");
        $sqlquery1 = "INSERT INTO LMB_RULES_ACTION (
        ID,
        LINK_ID,
        GROUP_ID,
        PERM,
        SORT
        ) VALUES (
        ".$NEXTID1.",
        ".parse_db_int(lmbdb_result($rs,"LINK_ID"),10).",
        $ID,
        ".parse_db_int(lmbdb_result($rs,"PERM"),10).",
        ".parse_db_int(lmbdb_result($rs,"SORT"),5)."
        )";
        $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
        if(!$rs1) {$commit = 1;}
    }

}


# --- Formularrechte von Obergruppe übernehmen ------------------------
function updateParentFormsettings($ID,$group_level,$typ=null){
	global $db;
	
	if(!$group_level){return false;}
    if($typ){$sql = "AND TYP = ".parse_db_int($typ);}

	$sqlquery = "DELETE FROM LMB_RULES_REPFORM WHERE GROUP_ID = $ID $sql";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);

    $sqlquery = "SELECT * FROM LMB_RULES_REPFORM WHERE GROUP_ID = $group_level $sql ORDER BY ID";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    if(!$rs) {$commit = 1;}
    while(lmbdb_fetch_row($rs)) {
        /* --- Next ID ---------------------------------------- */
        $NEXTID1 = next_db_id("LMB_RULES_REPFORM");
        $sqlquery1 = "INSERT INTO LMB_RULES_REPFORM (
        ID,
        TYP,
        GROUP_ID,
        REPFORM_ID,
        LMVIEW,
        HIDDEN,
        EDITABLE
        ) VALUES (
        ".$NEXTID1.",
        ".parse_db_int(lmbdb_result($rs,"TYP"),1).",
        $ID,
        ".parse_db_int(lmbdb_result($rs,"REPFORM_ID"),5).",
        ".parse_db_bool(lmbdb_result($rs,"LMVIEW")).",
        ".parse_db_bool(lmbdb_result($rs,"HIDDEN")).",
        ".parse_db_bool(lmbdb_result($rs,"EDITABLE"))."
        )";
        $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
        if(!$rs1) {$commit = 1;}
    }

}


# --- Tabellenrechte von Obergruppe übernehmen ------------------------
function updateParentTabsettings($ID,$group_level){
	global $db;

	if(!$group_level){return false;}

	$sqlquery = "DELETE FROM LMB_RULES_TABLES WHERE GROUP_ID = $ID";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}

	$sqlquery = "SELECT * FROM LMB_RULES_TABLES WHERE GROUP_ID = $group_level";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	while(lmbdb_fetch_row($rs)){

		$NEXTID = next_db_id("LMB_RULES_TABLES");

        $sqlquery1 = "INSERT INTO LMB_RULES_TABLES (
        ID,
        GROUP_ID,
        TAB_ID,
        TAB_GROUP,
        EDIT,
        LMVIEW,
        VIEW_PERIOD,
        VIEW_FORM,
        DEL,
        HIDE,
        LMADD,
        NEED,
        LMTRIGGER,
        VIEW_TFORM,
        VER,
        EDITRULE,
        HIDEMENU,
        USERRULES,
        VIEWVER,
        LMLOCK,
        USERPRIVILEGE
        
        ) VALUES (
        $NEXTID, 
        $ID,
        ".lmbdb_result($rs, "TAB_ID").",
        ".lmbdb_result($rs, "TAB_GROUP").",
        ".parse_db_bool(lmbdb_result($rs, "EDIT")).",
        ".parse_db_bool(lmbdb_result($rs, "LMVIEW")).",
        ".parse_db_int(lmbdb_result($rs, "VIEW_PERIOD"),5).",
        ".parse_db_int(lmbdb_result($rs, "VIEW_FORM"),5).",
        ".parse_db_bool(lmbdb_result($rs, "DEL")).",
        ".parse_db_bool(lmbdb_result($rs, "HIDE")).",
        ".parse_db_bool(lmbdb_result($rs, "LMADD")).",
        ".parse_db_bool(lmbdb_result($rs, "NEED")).",
        '".parse_db_string(lmbdb_result($rs, "LMTRIGGER"),20)."',
        ".parse_db_int(lmbdb_result($rs, "VIEW_TFORM"),5).",
        ".parse_db_int(lmbdb_result($rs, "VER"),2).",
        '".parse_db_string(lmbdb_result($rs, "EDITRULE"),255)."',
        ".parse_db_bool(lmbdb_result($rs, "HIDEMENU")).",
        ".parse_db_bool(lmbdb_result($rs, "USERRULES")).",
        ".parse_db_bool(lmbdb_result($rs, "VIEWVER")).",
        ".parse_db_bool(lmbdb_result($rs, "LMLOCK")).",
        ".parse_db_bool(lmbdb_result($rs, "USERPRIVILEGE"))."
        )";

		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;}
	}

	/*------------------------------ LMB_RULES_FIELDS ------------------------------------*/
	$sqlquery = "DELETE FROM LMB_RULES_FIELDS WHERE GROUP_ID =  $ID";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$sqlquery = "SELECT * FROM LMB_RULES_FIELDS WHERE GROUP_ID = $group_level";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	while(lmbdb_fetch_row($rs)) {

		$NEXTID = next_db_id("LMB_RULES_FIELDS");

        $sqlquery1 = "INSERT INTO LMB_RULES_FIELDS (
        ID,
        GROUP_ID,
        TAB_ID,
        FIELD_ID,
        TAB_GROUP,
        LMVIEW,
        EDIT,
        COLOR,
        FILTER,
        NEED,
        FILTERTYP,
        NFORMAT,
        CURRENCY,
        DEFLT,
        COPY,
        LMTRIGGER,
        EXT_TYPE,
        VER,
        EDITRULE,
        FIELDOPTION,
        LISTEDIT
        
        ) VALUES (
        
        $NEXTID, 
        $ID,
        ".lmbdb_result($rs, "TAB_ID").",
        ".lmbdb_result($rs,"FIELD_ID").",
        ".lmbdb_result($rs, "TAB_GROUP").",
        ".parse_db_bool(lmbdb_result($rs, "LMVIEW")).",
        ".parse_db_bool(lmbdb_result($rs, "EDIT")).",
        '".parse_db_string(lmbdb_result($rs, "COLOR"),8)."',
        '".parse_db_string(lmbdb_result($rs, "FILTER"),499)."',
        ".parse_db_bool(lmbdb_result($rs, "NEED")).",
        '".parse_db_int(lmbdb_result($rs, "FILTERTYP"),1)."',
        '".parse_db_string(lmbdb_result($rs, "NFORMAT"),30)."',
        '".parse_db_string(lmbdb_result($rs, "CURRENCY"),5)."',
        '".parse_db_string(lmbdb_result($rs, "DEFLT"),25)."',
        ".parse_db_bool(lmbdb_result($rs, "COPY")).",
        '".parse_db_string(lmbdb_result($rs, "LMTRIGGER"),20)."',
        '".parse_db_string(lmbdb_result($rs, "EXT_TYPE"),50)."',
        ".parse_db_bool(lmbdb_result($rs, "VER")).",
        '".parse_db_string(lmbdb_result($rs, "EDITRULE"),250)."',
        ".parse_db_bool(lmbdb_result($rs, "FIELDOPTION")).",
        ".parse_db_bool(lmbdb_result($rs, "LISTEDIT"))."
        )";


		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		if(!$rs1) {$commit = 1;}
	}

}






# Gruppe anlegen
function add_group($group_name,$group_beschr,$group_level,$use_parent){
	global $db;
	global $lang;
	global $groupdat;

	/* --- SUCHE ob schon vorhanden --------------------------------------------- */
	$sqlquery = "SELECT GROUP_ID FROM LMB_GROUPS WHERE NAME = '".parse_db_string($group_name)."'";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	if(lmbdb_fetch_row($rs)) {
		lmb_alert("$lang[561] \"$group_name\" $lang[600]");
		$ID = $group_level;
	}else{
		/* --- Transaktion START -------------------------------------- */
		lmb_StartTransaction();

		/* --- Gruppe hinzufügen in LMB_GROUPS --------------------------------------------- */
		$group_name = parse_db_string(str_replace(" ","",$group_name),50);

		/* --- Next ID ---------------------------------------- */
		$NEXTID = next_db_id("LMB_GROUPS","GROUP_ID");

		$sqlquery = "INSERT INTO LMB_GROUPS (GROUP_ID,NAME,DESCRIPTION,LEVEL,DEL) VALUES($NEXTID,'$group_name','$group_beschr',$group_level,".LMB_DBDEF_FALSE.")";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		$ID = $NEXTID;

		$sqlquery = "SELECT LEVEL FROM LMB_GROUPS WHERE GROUP_ID = $ID";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS["action"],__FILE__,__LINE__);
		if(!$rs) {$commit = 1;}
		if(lmbdb_result($rs, "LEVEL")){
			$group_level = lmbdb_result($rs, "LEVEL");
		}else{
			$group_level = 0;
            // drop missing rule entries
			check_grouprights1($ID);
			check_grouprights($ID);
		}

		# if parent group
		if($group_level AND $use_parent){
            updateParentTabsettings($ID,$group_level);
            updateParentMenusettings($ID,$group_level);
            updateParentFilesettings($ID, $group_level);
            updateParentFormsettings($ID, $group_level, 1);
            updateParentFormsettings($ID, $group_level, 2);
            updateParentFormsettings($ID, $group_level, 3);
            updateParentFormsettings($ID, $group_level, 4);
            updateParentFormsettings($ID, $group_level, 5);
        }else{
            check_grouprights1($ID);
            check_grouprights($ID);
		}

		/* --- Transaktion ENDE -------------------------------------- */
		if($commit == 1){
			lmb_EndTransaction(0);
		} else {
			lmb_EndTransaction(1);
			$groupdat["id"][$NEXTID-1] = $NEXTID;
			$groupdat["name"][$NEXTID] = $group_name;
			$groupdat["beschreibung"][$NEXTID] = $group_beschr;
			$_SESSION["groupdat"] = $groupdat;
			echo "<SCRIPT LANGUAGE=\"JavaScript\">parent.user_tree.location.href='main_admin.php?action=setup_user_tree';</SCRIPT>";
		}
	}

	return $ID;

}


/*------------------------------ Für alle Gruppen - Tabellen/Spalten-Rechte ------------------------------------*/
function check_grouprights1All($showstatus=null,$check_table=null){
    global $db;

    // drop missing rule entries
    del_tablerights($check_table);
    
    $commit = false;
	$sqlquery = "SELECT COUNT(*) AS ANZAHL FROM LMB_GROUPS";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = true;}
	$num_group =  lmbdb_result($rs,"ANZAHL");
    
	$sqlquery = "SELECT GROUP_ID,NAME FROM LMB_GROUPS";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = true;}
	while(lmbdb_fetch_row($rs)){
		if(!check_grouprights1(lmbdb_result($rs,"GROUP_ID"),lmbdb_result($rs,"NAME"),$num_group,$check_table,$showstatus)){
		      $commit = true;
		}
	}
	
	return !$commit;

}


/*------------------------------ Tabellen/Spalten-Rechte ------------------------------------*/
function check_grouprights1($group_id,$group_name="",$num_group=0,$check_table=0,$showstatus=null){

	global $db;
	global $lang;
	global $farbschema;
	global $num;

	if(is_numeric($check_table) AND $check_table){$check_table = " WHERE LMB_CONF_TABLES.TAB_ID = $check_table ";}else{$check_table = '';}

	$sqlquery = "SELECT LMB_CONF_TABLES.TABELLE,LMB_CONF_TABLES.TAB_ID,LMB_CONF_TABLES.BESCHREIBUNG,LMB_CONF_TABLES.TAB_GROUP,LMB_CONF_VIEWS.VIEWTYPE
FROM LMB_CONF_TABLES LEFT OUTER JOIN LMB_CONF_VIEWS ON (LMB_CONF_TABLES.TAB_ID = LMB_CONF_VIEWS.ID)
$check_table
ORDER BY TAB_ID";
	
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(!$rs) {$commit = 1;}
	$num_tab = 0;
	while(lmbdb_fetch_row($rs)) {
		if(!lmbdb_result($rs,"VIEWTYPE") OR lmbdb_result($rs,"VIEWTYPE") == 1){
			$gtab['table'][] = lmbdb_result($rs,"TABELLE");
			$gtab['tab_id'][] = lmbdb_result($rs,"TAB_ID");
			$gtab['desc'][] = $lang[lmbdb_result($rs,"BESCHREIBUNG")];
			$gtab['tab_group'][] = lmbdb_result($rs,"TAB_GROUP");
		}
	$num_tab++;
	}
	
	if($showstatus){
    	echo "<script>showprogressLabel('status_group','$group_name');</script>";
    	flush();ob_flush();
	}
	
	if($group_id == 1){
		$BOOL = LMB_DBDEF_TRUE;
		$atid = 2; $perm = 2;
	}else{
		$BOOL = LMB_DBDEF_FALSE;
		$atid = 2; $perm = 1;
	}
	
	
    foreach($gtab['tab_id'] as $bzm => $tab_id) {      	   	

        if($showstatus){
		  echo "<script>showprogressLabel('status_table','{$gtab['desc'][$bzm]}');</script>";
		  flush();ob_flush();
        }
        
		/*------------------------------ Tabellenrechte ------------------------------------*/
		$sqlquery = "SELECT ID FROM LMB_RULES_TABLES WHERE TAB_ID = ".$gtab['tab_id'][$bzm]." AND GROUP_ID = $group_id";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		if(!lmbdb_fetch_row($rs)){
			$NEXTID = next_db_id("LMB_RULES_TABLES");            
            $sqlquery1 = "INSERT INTO LMB_RULES_TABLES (ID,GROUP_ID,TAB_ID,TAB_GROUP,EDIT,LMVIEW,DEL,HIDE,LMADD,NEED,VIEW_FORM,VIEW_PERIOD) VALUES ($NEXTID,$group_id,".$gtab['tab_id'][$bzm].",".$gtab['tab_group'][$bzm].",$BOOL,$BOOL,$BOOL,$BOOL,$BOOL,".LMB_DBDEF_FALSE.",0,0)";
            $rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
		}

            
		/*------------------------------ Spaltenrechte ------------------------------------*/
		$sqlquery = "SELECT * FROM LMB_CONF_FIELDS WHERE TAB_ID = ".$gtab['tab_id'][$bzm]." ORDER BY TAB_ID,FIELD_ID";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		while(lmbdb_fetch_row($rs)) {
			$sqlquery2 = "SELECT ID FROM LMB_RULES_FIELDS WHERE FIELD_ID = ".lmbdb_result($rs,"FIELD_ID")." AND TAB_ID = ".$gtab['tab_id'][$bzm]." AND GROUP_ID = $group_id";
			$rs2 = lmbdb_exec($db,$sqlquery2) or errorhandle(lmbdb_errormsg($db),$sqlquery2,$action,__FILE__,__LINE__);
			if (!lmbdb_fetch_row($rs2)) {
				$NEXTID = next_db_id("LMB_RULES_FIELDS");				
				$sqlquery3 = "INSERT INTO LMB_RULES_FIELDS (ID,GROUP_ID,TAB_GROUP,TAB_ID,FIELD_ID,LMVIEW,EDIT,COLOR,FILTER) VALUES ($NEXTID,$group_id,".$gtab['tab_group'][$bzm].",".$gtab['tab_id'][$bzm].",".lmbdb_result($rs,"FIELD_ID").",$BOOL,$BOOL,'','')";
				$rs3 = lmbdb_exec($db,$sqlquery3) or errorhandle(lmbdb_errormsg($db),$sqlquery3,$action,__FILE__,__LINE__);
			}
		}
		
    	$num++;
    	if($showstatus AND $group_name AND $num_group){
    		echo '<script >showprogress(\'pb-overall\','.round(($num/($num_tab*$num_group))*100).');</script>';
    		flush();ob_flush();
    	}
	}
}

/*------------------------------ Tabellen/Spalten-Rechte / Übernehme Rechte von Obergruppe ------------------------------------*/
function check_grouprights2($group_id,$group_name="",$num_group=0,$showstatus=null){
	global $db;
	global $lang;
	global $num_tab;
	global $farbschema;
	global $num;
	
	if($showstatus){
	   echo "<script>showprogressLabel('status_group','$group_name');</script>";
	}
	
	$sqlquery = "SELECT LEVEL FROM LMB_GROUPS WHERE GROUP_ID = $group_id";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	if(lmbdb_result($rs, "LEVEL")){$group_level = lmbdb_result($rs, "LEVEL");}else{$group_level = 1;}

	$sqlquery = "DELETE FROM LMB_RULES_TABLES WHERE GROUP_ID = $group_id";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	   
	/*------------------------------ Tabellenrechte ------------------------------------*/
	$sqlquery = "SELECT * FROM LMB_RULES_TABLES WHERE GROUP_ID = $group_level";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)){
		if(lmbdb_result($rs, "EDIT")){$edit = LMB_DBDEF_TRUE;}else{$edit = LMB_DBDEF_FALSE;}
		if(lmbdb_result($rs, "LMVIEW")){$view = LMB_DBDEF_TRUE;}else{$view = LMB_DBDEF_FALSE;}
		if(lmbdb_result($rs, "DEL")){$delete = LMB_DBDEF_TRUE;}else{$delete = LMB_DBDEF_FALSE;}
		if(lmbdb_result($rs, "HIDE")){$hide = LMB_DBDEF_TRUE;}else{$hide = LMB_DBDEF_FALSE;}
		
		$NEXTID = next_db_id("LMB_RULES_TABLES");
		$sqlquery1 = "INSERT INTO LMB_RULES_TABLES (ID,GROUP_ID,TAB_ID,TAB_GROUP,EDIT,LMVIEW,DEL,HIDE,VIEW_FORM,VIEW_PERIOD) VALUES ($NEXTID,$group_id,".lmbdb_result($rs, "TAB_ID").",".lmbdb_result($rs, "TAB_GROUP").",".$edit.",".$view.",".$delete.",".$hide.",".lmbdb_result($rs, "VIEW_FORM").",".lmbdb_result($rs, "VIEW_PERIOD").")";
		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
	}

            
	/*------------------------------ Spaltenrechte ------------------------------------*/
	$sqlquery = "DELETE FROM LMB_RULES_FIELDS WHERE GROUP_ID = $group_id";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	$sqlquery = "SELECT * FROM LMB_RULES_FIELDS WHERE GROUP_ID = $group_level";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)) {
		if(lmbdb_result($rs, "EDIT")){$edit = LMB_DBDEF_TRUE;}else{$edit = LMB_DBDEF_FALSE;}
		if(lmbdb_result($rs, "LMVIEW")){$view = LMB_DBDEF_TRUE;}else{$view = LMB_DBDEF_FALSE;}
		if(lmbdb_result($rs,"SORT")){$sort = lmbdb_result($rs,"SORT");}else{$sort = 0;}
		
		$NEXTID = next_db_id("LMB_RULES_FIELDS");
		$sqlquery1 = "INSERT INTO LMB_RULES_FIELDS (ID,GROUP_ID,TAB_GROUP,TAB_ID,FIELD_ID,LMVIEW,EDIT,COLOR,FILTER) VALUES ($NEXTID,$group_id,".lmbdb_result($rs, "TAB_GROUP").",".lmbdb_result($rs, "TAB_ID").",".lmbdb_result($rs,"FIELD_ID").",$view,$edit,'".lmbdb_result($rs,"COLOR")."','".str_replace("'","''",lmbdb_result($rs,"FILTER"))."')";
		$rs1 = lmbdb_exec($db,$sqlquery1) or errorhandle(lmbdb_errormsg($db),$sqlquery1,$action,__FILE__,__LINE__);
	}


	$num++;
	
	if($showstatus AND $group_name AND $num_group){
		echo "<script>showprogress('pb-overall','".round(($num/$num_group)*100)."')</script>";
	}
}


function check_grouprightsAll($showstatus=null){
    global $db;

    $sqlquery = "Select COUNT(*) AS ANZAHL from LMB_GROUPS";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
    $num_group = lmbdb_result($rs,"ANZAHL");

	$sqlquery = "SELECT GROUP_ID,NAME FROM LMB_GROUPS";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)) {
		check_grouprights(lmbdb_result($rs,"GROUP_ID"),lmbdb_result($rs,"NAME"),$num_group,$showstatus);
		del_grouprights(lmbdb_result($rs,"GROUP_ID"),lmbdb_result($rs,"NAME"),$num_group);
	}

    return true;
    
}

/*------------------------------ Menue-Rechte ------------------------------------*/
function check_grouprights($groupid,$groupname="",$num_group=0,$showstatus=null){
	global $db;
	global $bzm5;
	global $lang;
	
	if($groupid){
		$group_name = $groupname;

		if($showstatus AND $GLOBALS["action"] AND $group_name){
			echo "<script>showprogressLabel('status_group','$group_name');</script>";
		}

		$sqlquery = "SELECT ID FROM LMB_ACTION UNION SELECT ID FROM LMB_ACTION_DEPEND";
		$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
		while(lmbdb_fetch_row($rs)) {
			$link_id = lmbdb_result($rs,"ID");
			$sqlquery2 = "SELECT ID FROM LMB_RULES_ACTION WHERE LINK_ID = ".$link_id." AND GROUP_ID = ".$groupid;
			$rs2 = lmbdb_exec($db,$sqlquery2) or errorhandle(lmbdb_errormsg($db),$sqlquery2,$action,__FILE__,__LINE__);
			if(!lmbdb_fetch_row($rs2)) {
				/* --- Next ID ---------------------------------------- */
				$NEXTID = next_db_id("LMB_RULES_ACTION");
				if($groupid == 1){$perm = 2;}else{$perm = 1;}
				$sqlquery4 = "INSERT INTO LMB_RULES_ACTION (ID,LINK_ID,GROUP_ID,PERM) VALUES (".$NEXTID.",".$link_id.",".$groupid.",$perm)";
				$rs4 = lmbdb_exec($db,$sqlquery4) or errorhandle(lmbdb_errormsg($db),$sqlquery4,$action,__FILE__,__LINE__);
				$add_link++;
			}
		}

		if($showstatus AND $GLOBALS["action"] AND $group_name){
    		$progress_last = round(($bzm5)*100/$num_group);
    		echo "<script>showprogress('pb-overall',$progress_last);</script>";
    		flush();
    		ob_flush();
		}
	}
	$bzm5++;
}

function del_grouprights($groupid,$groupname="",$num_group=0){
	global $db;
	global $lang;

	$sqlquery = "SELECT COUNT(*) AS ANZAHL FROM LMB_GROUPS";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	$num_group = lmbdb_result($rs,"ANZAHL");

	$sqlquery = "SELECT LINK_ID FROM LMB_RULES_ACTION WHERE GROUP_ID = ".$groupid;
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)) {
		$link_id = lmbdb_result($rs,"LINK_ID");
		if($link_id < 1000){
			$sqlquery2 = "SELECT ID FROM LMB_ACTION WHERE ID = ".$link_id;
		}else{
			$sqlquery2 = "SELECT ID FROM LMB_ACTION_DEPEND WHERE ID = ".$link_id;
		}
		$rs2 = lmbdb_exec($db,$sqlquery2) or errorhandle(lmbdb_errormsg($db),$sqlquery2,$GLOBALS['action'],__FILE__,__LINE__);
		if (!lmbdb_fetch_row($rs2)) {
			$sqlquery3 = "DELETE FROM LMB_RULES_ACTION WHERE LINK_ID = ".$link_id." AND GROUP_ID = ".$groupid;
			$rs3 = lmbdb_exec($db,$sqlquery3) or errorhandle(lmbdb_errormsg($db),$sqlquery3,$GLOBALS['action'],__FILE__,__LINE__);
			$del_link++;
		}
	}
}


function del_tablerights($tabid=null){
	global $db;
	global $lang;

	if($tabid){
        $gqr = "AND TAB_ID = $tabid";
    }

    // table rules
	$sqlquery = "DELETE FROM LMB_RULES_TABLES WHERE
    NOT EXISTS (
        SELECT ID FROM LMB_CONF_TABLES WHERE LMB_CONF_TABLES.TAB_ID = LMB_RULES_TABLES.TAB_ID
    ) $gqr";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);

	// field rules
	$sqlquery = "DELETE FROM LMB_RULES_FIELDS WHERE
    NOT EXISTS (
        SELECT ID FROM LMB_CONF_FIELDS WHERE LMB_CONF_FIELDS.TAB_ID = LMB_RULES_FIELDS.TAB_ID AND LMB_CONF_FIELDS.FIELD_ID = LMB_RULES_FIELDS.FIELD_ID
    ) $gqr";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);


	// sync template
    /*
	$sqlquery = "DELETE FROM LMB_SYNC_TEMPLATE WHERE
    NOT EXISTS (
        SELECT ID FROM LMB_CONF_TABLES WHERE LMB_CONF_TABLES.TAB_ID = LMB_SYNC_TEMPLATE.TABID
    ) $gqr";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);
    */

	if($tabid){
        $gqr = "AND TABID = $tabid";
    }else{
        $gqr = "AND TABID != -1";
    }

	// sync rules
	$sqlquery = "DELETE FROM LMB_SYNC_CONF WHERE
    NOT EXISTS (
        SELECT ID FROM LMB_CONF_FIELDS WHERE LMB_CONF_FIELDS.TAB_ID = LMB_SYNC_CONF.TABID AND LMB_CONF_FIELDS.FIELD_ID = LMB_SYNC_CONF.FIELDID
    ) $gqr";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$GLOBALS['action'],__FILE__,__LINE__);

}




?>
