<?php
/**
 * @copyright Limbas GmbH <https://limbas.com>
 * @license https://opensource.org/licenses/GPL-2.0 GPL-2.0
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 */





function add_reminder($new_remindername,$new_remindertable,$new_reminderform){
	global $db;
	global $session;

    #if(!$new_remindertable){
    #    lmb_alert('no table selected!');
    #    return;
    #}

	require_once(COREPATH . 'admin/setup/language.lib');
	
	// language
	$name_id = lang_add($session["language"],4,"Reminder: ".$new_remindername,$new_remindername,"_DEPEND");
	
	$NEXT_ID = next_db_id("LMB_REMINDER_LIST");
	$NEXTSORT = next_db_id("LMB_REMINDER_LIST","SORT");
	$sqlquery = "INSERT INTO LMB_REMINDER_LIST (ID,ERSTUSER,ERSTDATUM,NAME,TAB_ID,FORML_ID,FORMD_ID,SORT) VALUES($NEXT_ID,".$session["user_id"].",".LMB_DBDEF_TIMESTAMP.",'".parse_db_int($name_id)."',".parse_db_int($new_remindertable,5).",".parse_db_int($new_reminderforml,5).",".parse_db_int($new_reminderformd,5).",$NEXTSORT)";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

function delete_reminder($delid){
	global $db;
	
	require_once(COREPATH . 'admin/setup/language.lib');
	
	$reminder = get_reminder();
	$name_id = $reminder['name_id'][$delid];
	
	$sqlquery = "DELETE FROM LMB_REMINDER_LIST WHERE ID = ".parse_db_int($delid);
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);

	// language
	lang_delete($name_id,"_DEPEND");
}

function get_reminder(){
	global $db;
        global $lang;
    
	$sqlquery = "SELECT * FROM LMB_REMINDER_LIST ORDER BY TAB_ID,SORT";
	$rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
	while(lmbdb_fetch_row($rs)){
		$key = lmbdb_result($rs, "ID");
		$tabid = parse_db_int(lmbdb_result($rs, "TAB_ID"));
		$reminder[$tabid]['name'][$key] = $lang[lmbdb_result($rs, "NAME")];
		$reminder[$tabid]['forml_id'][$key] = lmbdb_result($rs, "FORML_ID");
		$reminder[$tabid]['formd_id'][$key] = lmbdb_result($rs, "FORMD_ID");
		$reminder[$tabid]['groupbased'][$key] = lmbdb_result($rs, "GROUPBASED");
        $reminder[$tabid]['defaultselection'][$key] = lmbdb_result($rs, "DEFAULTSELECTION");
        $reminder[$tabid]['info'][$key] = lmbdb_result($rs, "NOTIFICATION");
        $reminder[$tabid]['refresh'][$key] = lmbdb_result($rs, "REFRESHTIME");
        $reminder['name_id'][$key] = lmbdb_result($rs, "NAME");
	}
	return $reminder;
}


function edit_reminder($id){
	global $db;
	global $reminderforml;
	global $reminderformd;
	global $remindername;
	global $remindergrouping;
    global $reminderdefault;
    global $reminderinfo;
    global $reminderrfresh;
	global $session;
	
	require_once(COREPATH . 'admin/setup/language.lib');
	
	$reminder = get_reminder();
	$name_id = $reminder['name_id'][$id];

        // language
	if($name = $remindername[$id]){
	   lang_change(null,$name_id,$name,$session["language"],"_DEPEND");
	}
	
	$sqlquery = "UPDATE LMB_REMINDER_LIST SET FORML_ID = ".parse_db_int($reminderforml[$id]).",FORMD_ID = ".parse_db_int($reminderformd[$id]).", GROUPBASED = ".parse_db_bool($remindergrouping[$id]).", DEFAULTSELECTION = ".parse_db_bool($reminderdefault[$id]).", NOTIFICATION = ".parse_db_bool($reminderinfo[$id]).", REFRESHTIME = ".parse_db_int($reminderrfresh[$id])." WHERE ID = $id";
    $rs = lmbdb_exec($db,$sqlquery) or errorhandle(lmbdb_errormsg($db),$sqlquery,$action,__FILE__,__LINE__);
}

if($sort AND $sortid){
	lmb_sortConf($sort,$sortid,'LMB_REMINDER_LIST','SORT',"TAB_ID = $tabid");
}

if($new_reminder AND $new_remindername){
	if(!$new_remindertable){
	    lmb_alert('no table selected! reminder will be table-independent');
	}
	add_reminder($new_remindername,$new_remindertable,$new_reminderform);
}

if(is_numeric($delid)){
	delete_reminder($delid);
}

if(is_numeric($editid)){
	edit_reminder($editid);
}

$reminder = get_reminder();
	
?>
